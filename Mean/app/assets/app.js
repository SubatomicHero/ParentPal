angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","$location","$http","UserSvc",function(o,e,t,n){window.localStorage.token&&(t.defaults.headers.common["X-Auth"]=window.localStorage.token,n.getUser().then(function(e){o.currentUser=e.data})),o.$on("login",function(t,n){o.currentUser=n,e.path("/posts")}),o.$on("logout",function(){o.currentUser=null,e.path("/")})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(o,e){o.login=function(t){e.login(t).then(function(e){o.$emit("login",e.data)})}}]),angular.module("app").controller("LogoutCtrl",["$scope","UserSvc",function(o,e){o.logout=function(){e.logout(),o.$emit("logout")},o.logout()}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(o,e){e.fetch().success(function(e){o.posts=e}),o.addPost=function(){o.postBody&&e.create({body:o.postBody}).success(function(){o.postBody=null})},o.$on("ws:new_post",function(e,t){o.$apply(function(){o.posts.unshift(t)})})}]),angular.module("app").service("PostsSvc",["$http",function(o){this.fetch=function(){return o.get("/api/posts")},this.create=function(e){return o.post("/api/posts",e)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(o,e){function t(o,e){return o!==e?!1:!0}o.errorMessage=null,o.createUser=function(n){t(n.password,n.cpassword)?(o.errorMessage&&(o.errorMessage=null),e.createUser(n.username,n.password).then(function(){o.$emit("login",n)})):o.errorMessage="Passwords do not match, try again."}}]),angular.module("app").config(["$routeProvider","$locationProvider",function(o){o.when("/",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/logout",{controller:"LogoutCtrl",templateUrl:"logout.html"}).when("/posts",{controller:"PostsCtrl",templateUrl:"posts.html"})}]),angular.module("app").service("UserSvc",["$http",function(o){var e=this;e.getUser=function(){return o.get("/api/users")},e.setRememberMe=function(o){this.rememberMe=o},e.getRememberMe=function(){return this.rememberMe},e.login=function(t){return o.post("/api/sessions",{username:t.username,password:t.password}).then(function(n){return window.localStorage.token=n.data,o.defaults.headers.common["X-Auth"]=n.data,e.setRememberMe(t.save),e.getUser()})},e.logout=function(){o.defaults.headers.common["X-Auth"]=null,e.getRememberMe()||window.localStorage.removeItem("token")},e.createUser=function(t,n){return o.post("/api/users",{username:t,password:n}).success(function(){return e.login(t,n)}).error(function(o){console.log("Error: "+o)})}}]),angular.module("app").run(["$rootScope",function(o){var e="ws://localhost:3000",t=new WebSocket(e);t.onopen=function(){console.log("Websocket connected")},t.onmessage=function(e){var t=JSON.parse(e.data);o.$broadcast("ws:"+t.topic,t.data)}}]);